name: Build, Scan, and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    name: Build, Scan and Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérification du code source
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Debug pour vérifier les variables
      - name: Debug repository owner
        run: echo "${{ github.repository_owner }}"

      # Étape 3 : Connexion à GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Étape 4 : Build et tag de l'image Docker avec la conversion en minuscules pour le nom du propriétaire
      - name: Build Docker image
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/${REPO_OWNER}/ue19-lab-05:latest .

      # Étape 5 : Installation et configuration de Trivy
      - name: Setup Trivy
        uses: aquasecurity/setup-trivy@0.2.0  # Ou une version plus récente si nécessaire
        with:
          cache: true
          version: v0.57.1

      # Étape 6 : Scan de l'image Docker pour les vulnérabilités avec Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'ghcr.io/${{ github.repository_owner | lower }}/ue19-lab-05:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'

      # Étape 7 : Télécharger les résultats du scan Trivy vers l'onglet "Security" de GitHub
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # Étape 8 : Pousser l'image Docker sur GitHub Container Registry
      - name: Push Docker image
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/${REPO_OWNER}/ue19-lab-05:latest
